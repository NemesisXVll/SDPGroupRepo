// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model USER {
  USER_ID              Int                @id @default(autoincrement())
  USER_MASTERPASSWORD  String //USING BCRYPT
  USER_FNAME           String
  USER_LNAME           String
  USER_EMAIL           String             @unique
  USER_SALT            String //NEEDS DISCUSSION
  USER_CREATEDDATE     DateTime           @default(now())
  USER_LASTUPDATEDDATE DateTime?          @updatedAt
  USER_PICTURE         Bytes? // (not sure this works) (Picture of the user)
  CREDENTIALS          CREDENTIAL[]
  SECURITYQUESTION     SECURITYQUESTION[]
}

model CREDENTIAL {
  CREDENTIAL_ID            Int      @id @default(autoincrement())
  CREDENTIAL_TITLE         String
  CREDENTIAL_USERNAME      String?
  CREDENTIAL_EMAIL         String?
  CREDENTIAL_PASSWORD      String //USING ENCRYPTION
  CREDENTIAL_KEY           String   @unique //MAY NOT BE REQUIRED (Might be the Master Password)
  CREDENTIAL_URL           String?
  CREDENTIAL_NOTES         String? //"Like Security Questions, PINs, Hints, etc."
  CREDENTIAL_STRENGTHMETER Int //MAY NOT BE REQUIRED
  CREDENTIAL_DATECREATED   DateTime @default(now())
  CREDENTIAL_DATEUPDATED   DateTime @updatedAt
  CREDENTIAL_MEDIATYPE     String   @default("General") //"Like 'Personal', 'Social Media', 'Email', 'Banking', etc."
  CRDENTIAL_PICTURE        Bytes? // (not sure this works) (Picture of the website)"
  CREDENTIAL_ISFAVOURITE   Boolean  @default(false)
  TRASH                    TRASH[]
  USER                     USER     @relation(fields: [USER_ID], references: [USER_ID])
  USER_ID                  Int
}

model SECURITYQUESTION {
  SECURITYQUESTION_ID         Int    @id @default(autoincrement())
  SECURITYQUESTION_QUESTION   String
  SECURITYQUESTION_ANSWERSALT String
  SECURITYQUESTION_ANSWERHASH String
  USER                        USER   @relation(fields: [USER_ID], references: [USER_ID])
  USER_ID                     Int //foreign key
}

model TRASH {
  TRASH_ID            Int        @id @default(autoincrement())
  TRASH_ISRECOVERED   Boolean    @default(false) //If yes then it isnt deleted, else it is deleted.
  CREDENTIAL          CREDENTIAL @relation(fields: [CREDENTIAL_ID], references: [CREDENTIAL_ID])
  CREDENTIAL_ID       Int
}
